/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package execução;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import arquivo.LeituraArquivo;
import busca.BoyerMooreSearch;
import busca.ISearchStrategy;
import busca.KMPSearch;
import busca.NaiveSearch;
import busca.RabinKarpSearch;
import busca.WordLocation;

import javax.swing.AbstractListModel;

/**
 *
 * @author udesc
 */
public class MainView extends javax.swing.JFrame implements IMainView{
	Map<Integer, ArrayList<WordLocation>> arqlocation=new HashMap<Integer, ArrayList<WordLocation>>();

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddFile = new javax.swing.JButton();
        scrollFilesPanesl = new javax.swing.JScrollPane();
        labelFiles = new javax.swing.JLabel();
        labelWord = new javax.swing.JLabel();
        btnFindWord = new javax.swing.JButton();
        labelResult = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        labelTitle = new javax.swing.JLabel();
        textWord = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pesquisa de String");

        btnAddFile.setText("Incluir Arquivo");
        btnAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFileActionPerformed(evt);
            }
        });

        labelFiles.setText("Arquivos usados para procura");

        labelWord.setText("Palavra");

        btnFindWord.setText("Procurar palavra");
        btnFindWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindWordActionPerformed(evt);
            }
        });

        labelResult.setText("Arquivos usados para procura");

        btnExit.setText("Sair");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        labelTitle.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        labelTitle.setText("Pesquisa de palavras em arquivos");

        textWord.setText("digite a palavra que ser\u00E1 procurada");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(scrollFilesPanesl, GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(labelFiles)
        						.addComponent(labelTitle))
        					.addGap(0, 704, Short.MAX_VALUE))
        				.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        					.addComponent(btnExit, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 664, GroupLayout.PREFERRED_SIZE))
        				.addComponent(labelResult)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(labelWord)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(textWord, GroupLayout.PREFERRED_SIZE, 440, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(btnAddFile, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        							.addGap(4))
        						.addComponent(btnFindWord, GroupLayout.PREFERRED_SIZE, 246, GroupLayout.PREFERRED_SIZE))))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(labelTitle)
        			.addGap(29)
        			.addComponent(labelFiles)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(scrollFilesPanesl, GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(btnAddFile)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnFindWord, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(labelWord)
        				.addComponent(textWord, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(labelResult)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
        			.addGap(118)
        			.addComponent(btnExit)
        			.addContainerGap())
        );
        textResult = new javax.swing.JTextArea();
        jScrollPane1.setViewportView(textResult);
        
        textResult.setColumns(20);
        textResult.setRows(5);
        listFiles = new javax.swing.JList<>();
        scrollFilesPanesl.setViewportView(listFiles);
        
                listFiles.setModel(new AbstractListModel<String>() {
                	String[] values = new String[] {"1H4.txt", "1H6.txt", "2H4.txt", "2H6.txt", "3H6.txt", "Ado.txt", "Ant.txt", "AWW.txt"};
                	public int getSize() {
                		return values.length;
                	}
                	public String getElementAt(int index) {
                		return values[index];
                	}
                });
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddFileActionPerformed

    private void btnFindWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindWordActionPerformed
    	arqlocation = null;
    	arqlocation = new HashMap<Integer, ArrayList<WordLocation>>();
    	List<String> lisFiles = getListFiles();
    	ArrayList<String> testos = new ArrayList<String>();
    	LeituraArquivo leitura = new LeituraArquivo();
    	ISearchStrategy busca[] = {
    			new NaiveSearch(),
    			new KMPSearch(),
    			new BoyerMooreSearch(),
    			new RabinKarpSearch()
    			}; 
    	
    	int arq=0;
    	for (Iterator<String> iterator = lisFiles.iterator(); iterator.hasNext();) {
			String string = (String) iterator.next();
			try {
				testos.add(leitura.leArquivo(string).toString());
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
    	for (Iterator<String> iterator = testos.iterator(); iterator.hasNext();) {
			String string = (String) iterator.next();
	    	ArrayList<WordLocation> listaResultados = new ArrayList<WordLocation>();
			listaResultados.add(busca[0].search(string, getTextWordToFind()));
			listaResultados.add(busca[1].search(string, getTextWordToFind()));
			listaResultados.add(busca[2].search(string, getTextWordToFind()));
			listaResultados.add(busca[3].search(string, getTextWordToFind()));
			busca[0].limpa();
			busca[1].limpa();
			busca[2].limpa();
			busca[3].limpa();
			arqlocation.put(arq, listaResultados);
		}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFindWordActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
    	System.exit(NORMAL);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFindWord;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFiles;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelWord;
    private javax.swing.JList<String> listFiles;
    private javax.swing.JScrollPane scrollFilesPanesl;
    private javax.swing.JTextArea textResult;
    private javax.swing.JTextField textWord;
    // End of variables declaration//GEN-END:variables

    /**
     * Retorna a lista de arquivos
     * @return 
     */
    @Override
    public List<String> getListFiles() {
        return listFiles.getSelectedValuesList();
    }

    /**
     * Define a lista de valores do resultado
     * @param values
     * @return 
     */
    @Override
    public void setTextResultValue(String values) {
        textResult.setText(values);
    }

    /**
     * Pega os valores que jÃ¡ estao na lista
     * @return 
     */
    @Override
    public String getTextResultValue() {
        return textResult.getText();
    }

    /**
     * Retorna a palavra que deve ser procurada
     * @return 
     */
    @Override
    public String getTextWordToFind() {
       return textWord.getText();
    }
}
